version: "3.8"

services:
  redis:
    image: redis:7-alpine
    container_name: proxmox-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["/bin/sh", "-c", "exec redis-server --requirepass \"${REDIS_PASSWORD}\" --appendonly yes"]
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "PING"]
      interval: 10s
      timeout: 3s
      retries: 10
    networks:
      - proxmox_network

  celery-worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.celery
    container_name: proxmox-celery-worker
    restart: unless-stopped
    depends_on:
      - redis
    volumes:
      - ../:/app
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
      # 호스트의 terraform 바이너리 마운트
      - /usr/local/bin/terraform:/usr/local/bin/terraform:ro
      - /usr/bin/terraform:/usr/bin/terraform:ro
      # 호스트의 terraform 디렉토리 전체 마운트
      - ../terraform:/app/terraform:ro      
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - REDIS_ENABLED=true
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - TZ=Asia/Seoul
    working_dir: /app
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2 --autoreload
    networks:
      - proxmox_network

  celery-flower:
    build:
      context: ..
      dockerfile: docker/Dockerfile.celery
    container_name: proxmox-celery-flower
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - "5555:5555"
    volumes:
      - ../:/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=0
      - REDIS_ENABLED=true
    working_dir: /app
    command: celery -A app.celery_app flower --port=5555
    networks:
      - proxmox_network

networks:
  proxmox_network:
    driver: bridge

volumes:
  redis-data:
    driver: local


